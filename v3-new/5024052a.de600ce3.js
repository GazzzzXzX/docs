(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{182:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return a})),n.d(t,"default",(function(){return c}));n(52),n(25),n(20),n(21),n(53),n(0);var r=n(288);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var i={title:"Using QueryBuilder"},a=[{value:"Running native SQL query",id:"running-native-sql-query",children:[]},{value:"Executing the query",id:"executing-the-query",children:[]},{value:"Mapping raw results to entities",id:"mapping-raw-results-to-entities",children:[]},{value:"Implicit joining",id:"implicit-joining",children:[]},{value:"Explicit joining",id:"explicit-joining",children:[]},{value:"Complex where conditions",id:"complex-where-conditions",children:[{value:"Custom SQL in where",id:"custom-sql-in-where",children:[]},{value:"andWhere() and orWhere()",id:"andwhere-and-orwhere",children:[]},{value:"Condition object",id:"condition-object",children:[]}]},{value:"Locking support",id:"locking-support",children:[]},{value:"QueryBuilder API",id:"querybuilder-api",children:[]}],l={rightToc:a},u="wrapper";function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(r.b)(u,o({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"When you need to execute some SQL query without all the ORM stuff involved, you can either\ncompose the query yourself, or use the ",Object(r.b)("inlineCode",{parentName:"p"},"QueryBuilder")," helper to construct the query for you:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const qb = orm.em.createQueryBuilder(Author);\nqb.update({ name: 'test 123', type: PublisherType.GLOBAL }).where({ id: 123, type: PublisherType.LOCAL });\n\nconsole.log(qb.getQuery());\n// UPDATE `publisher2` SET `name` = ?, `type` = ? WHERE `id` = ? AND `type` = ?\n\nconsole.log(qb.getParams());\n// ['test 123', PublisherType.GLOBAL, 123, PublisherType.LOCAL]\n\n// run the query\nconst res1 = await qb.execute();\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"QueryBuilder")," also supports ",Object(r.b)("a",o({parentName:"p"},{href:"/docs/v2/query-conditions"}),"smart query conditions"),"."),Object(r.b)("h2",{id:"running-native-sql-query"},"Running native SQL query"),Object(r.b)("p",null,"You can run native SQL via underlying connection"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const connection = orm.em.getConnection();\nconst res = await connection.execute('SELECT 1 as count');\nconsole.log(res); // res is array of objects: `[ { count: 1 } ]`\n")),Object(r.b)("h2",{id:"executing-the-query"},"Executing the query"),Object(r.b)("p",null,"You can use ",Object(r.b)("inlineCode",{parentName:"p"},"execute(method = 'all', mapResults = true)"),"'s parameters to control form of result:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const res1 = await qb.execute('all'); // returns array of objects, default behavior\nconst res2 = await qb.execute('get'); // returns single object\nconst res3 = await qb.execute('run'); // returns object like `{ affectedRows: number, insertId: number, row: any }`\n")),Object(r.b)("p",null,"Second argument can be used to disable mapping of database columns to property names (which\nis enabled by default). In following example, ",Object(r.b)("inlineCode",{parentName:"p"},"Book")," entity has ",Object(r.b)("inlineCode",{parentName:"p"},"createdAt")," property defined\nwith implicit underscored field name ",Object(r.b)("inlineCode",{parentName:"p"},"created_at"),":"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const res4 = await orm.em.createQueryBuilder(Book).select('*').execute('get', true);\nconsole.log(res4); // `createdAt` will be defined, while `created_at` will be missing\nconst res5 = await orm.em.createQueryBuilder(Book).select('*').execute('get', false);\nconsole.log(res5); // `created_at` will be defined, while `createdAt` will be missing\n")),Object(r.b)("p",null,"To create entities from query builder result, you can use ",Object(r.b)("inlineCode",{parentName:"p"},"merge()")," method of ",Object(r.b)("inlineCode",{parentName:"p"},"EntityManager"),":"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const res6 = await orm.em.createQueryBuilder(Book).select('*').execute();\nconst entities = res6.map(data => orm.em.merge(Book, data));\nconsole.log(entities); // array of Book entities\n")),Object(r.b)("h2",{id:"mapping-raw-results-to-entities"},"Mapping raw results to entities"),Object(r.b)("p",null,"Another way to create entity from raw results (that are not necessarily mapped to entity properties)\nis to use ",Object(r.b)("inlineCode",{parentName:"p"},"map()")," method of ",Object(r.b)("inlineCode",{parentName:"p"},"EntityManager"),", that is basically a shortcut for mapping results\nvia ",Object(r.b)("inlineCode",{parentName:"p"},"IDatabaseDriver.mapResult()")," (which converts field names to property names - e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"created_at"),"\nto ",Object(r.b)("inlineCode",{parentName:"p"},"createdAt"),") and ",Object(r.b)("inlineCode",{parentName:"p"},"merge()")," which converts the data to entity instance and makes it managed. "),Object(r.b)("p",null,"This method comes handy when you want to use 3rd party query builder like ",Object(r.b)("a",o({parentName:"p"},{href:"https://knexjs.org/"}),"Knex.js"),",\nwhere the result is not mapped to entity properties automatically:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const results = await knex.select('*').from('users').where(knex.raw('id = ?', [id]));\nconst users = results.map(user => orm.em.map(User, user));\n\n// or use EntityRepository.map()\nconst repo = orm.em.getRepository(User);\nconst users = results.map(user => repo.map(user));\n")),Object(r.b)("h2",{id:"implicit-joining"},"Implicit joining"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"QueryBuilder")," supports automatic joining based on entity metadata:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const qb = orm.em.createQueryBuilder(BookTag, 't');\nqb.select('*').where({ books: 123 });\n\nconsole.log(qb.getQuery());\n// SELECT `t`.*, `e1`.`book_tag_id`, `e1`.`book_uuid_pk`\n// FROM `book_tag` AS `t`\n// LEFT JOIN `book_to_book_tag` AS `e1` ON `t`.`id` = `e1`.`book_tag_id`\n// WHERE `e1`.`book_uuid_pk` = ?\n")),Object(r.b)("h2",{id:"explicit-joining"},"Explicit joining"),Object(r.b)("p",null,"Another way is to manually specify join property via ",Object(r.b)("inlineCode",{parentName:"p"},"join()"),"/",Object(r.b)("inlineCode",{parentName:"p"},"leftJoin()")," methods:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const qb = orm.em.createQueryBuilder(BookTag, 't');\nqb.select(['b.uuid', 'b.*', 't.*'], true)\n  .join('t.books', 'b')\n  .where({ 'b.title': 'test 123' })\n  .limit(2, 1);\n\nconsole.log(qb.getQuery());\n// SELECT DISTINCT `b`.`uuid_pk`, `b`.*, `t`.*, `e1`.`book_tag_id`, `e1`.`book_uuid_pk` FROM `book_tag` AS `t`\n// JOIN `book_to_book_tag` AS `e1` ON `t`.`id` = `e1`.`book_tag_id`\n// JOIN `book` AS `b` ON `e1`.`book_uuid_pk` = `b`.`uuid_pk`\n// WHERE `b`.`title` = ?\n// LIMIT ? OFFSET ?\n")),Object(r.b)("h2",{id:"complex-where-conditions"},"Complex where conditions"),Object(r.b)("p",null,"There are multiple ways to construct complex query conditions. You can either write parts of SQL\nmanually, use ",Object(r.b)("inlineCode",{parentName:"p"},"andWhere()"),"/",Object(r.b)("inlineCode",{parentName:"p"},"orWhere()"),", or provide condition object:"),Object(r.b)("h3",{id:"custom-sql-in-where"},"Custom SQL in where"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const qb = orm.em.createQueryBuilder(BookTag, 't');\nqb.select(['b.*', 't.*'])\n  .leftJoin('t.books', 'b')\n  .where('b.title = ? OR b.title = ?', ['test 123', 'lol 321'])\n  .andWhere('1 = 1')\n  .orWhere('1 = 2')\n  .limit(2, 1);\n\nconsole.log(qb.getQuery());\n// SELECT `b`.*, `t`.*, `e1`.`book_tag_id`, `e1`.`book_uuid_pk` FROM `book_tag` AS `t`\n// LEFT JOIN `book_to_book_tag` AS `e1` ON `t`.`id` = `e1`.`book_tag_id`\n// LEFT JOIN `book` AS `b` ON `e1`.`book_uuid_pk` = `b`.`uuid_pk`\n// WHERE (((b.title = ? OR b.title = ?) AND (1 = 1)) OR (1 = 2))\n// LIMIT ? OFFSET ?\n")),Object(r.b)("h3",{id:"andwhere-and-orwhere"},"andWhere() and orWhere()"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const qb = orm.em.createQueryBuilder(BookTag, 't');\nqb.select(['b.*', 't.*'])\n  .leftJoin('t.books', 'b')\n  .where('b.title = ? OR b.title = ?', ['test 123', 'lol 321'])\n  .andWhere('1 = 1')\n  .orWhere('1 = 2')\n  .limit(2, 1);\n\nconsole.log(qb.getQuery());\n// SELECT `b`.*, `t`.*, `e1`.`book_tag_id`, `e1`.`book_uuid_pk` FROM `book_tag` AS `t`\n// LEFT JOIN `book_to_book_tag` AS `e1` ON `t`.`id` = `e1`.`book_tag_id`\n// LEFT JOIN `book` AS `b` ON `e1`.`book_uuid_pk` = `b`.`uuid_pk`\n// WHERE (((b.title = ? OR b.title = ?) AND (1 = 1)) OR (1 = 2))\n// LIMIT ? OFFSET ?\n")),Object(r.b)("h3",{id:"condition-object"},"Condition object"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const qb = orm.em.createQueryBuilder(Test);\nqb.select('*').where({ $and: [{ id: { $nin: [3, 4] } }, { id: { $gt: 2 } }] });\n\nconsole.log(qb.getQuery());\n// SELECT `e0`.* FROM `test` AS `e0` WHERE (`e0`.`id` NOT IN (?, ?) AND `e0`.`id` > ?)\n")),Object(r.b)("h2",{id:"locking-support"},"Locking support"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"const qb = orm.em.createQueryBuilder(Test);\nqb.select('*').where({ name: 'Lol 321' }).setLockMode(LockMode.PESSIMISTIC_READ);\n\nconsole.log(qb.getQuery()); // for MySQL\n// SELECT `e0`.* FROM `test` AS `e0` WHERE `e0`.`name` = ? LOCK IN SHARE MODE\n")),Object(r.b)("h2",{id:"querybuilder-api"},"QueryBuilder API"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"QueryBuilder")," provides fluent interface with these methods:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-typescript"}),"QueryBuilder.select(fields: string | string[], distinct?: boolean): QueryBuilder;\nQueryBuilder.insert(data: any): QueryBuilder;\nQueryBuilder.update(data: any): QueryBuilder;\nQueryBuilder.delete(cond: any): QueryBuilder;\nQueryBuilder.count(fields: string | string[], distinct?: boolean): QueryBuilder;\nQueryBuilder.join(field: string, alias?: string): QueryBuilder;\nQueryBuilder.leftJoin(field: string, alias?: string): QueryBuilder;\nQueryBuilder.where(cond: any, operator: '$and' | '$or'): QueryBuilder;\nQueryBuilder.andWhere(cond: any): QueryBuilder;\nQueryBuilder.orWhere(cond: any): QueryBuilder;\nQueryBuilder.groupBy(fields: string | string[]): QueryBuilder;\nQueryBuilder.having(cond: any): QueryBuilder;\nQueryBuilder.populate(populate: string[]): QueryBuilder;\nQueryBuilder.limit(limit: number, offset?: number): QueryBuilder;\nQueryBuilder.offset(offset: number): QueryBuilder;\nQueryBuilder.setLockMode(mode: LockMode): QueryBuilder;\nQueryBuilder.getQuery(): string;\nQueryBuilder.getParams(): any;\nQueryBuilder.clone(): QueryBuilder;\n")))}c.isMDXComponent=!0},288:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r),i=o.a.createContext({}),a=function(e){var t=o.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=a(e.components);return o.a.createElement(i.Provider,{value:t},e.children)};var u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},s=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),s=a(n),b=r,d=s[l+"."+b]||s[b]||c[b]||i;return n?o.a.createElement(d,Object.assign({},{ref:t},u,{components:n})):o.a.createElement(d,Object.assign({},{ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var b=2;b<i;b++)a[b]=n[b];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);