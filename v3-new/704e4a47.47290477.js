(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{201:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return s}));t(52),t(25),t(20),t(21),t(53),t(0);var r=t(288);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var o={title:"Defining entities"},i=[{value:"Entity file names",id:"entity-file-names",children:[]},{value:"Using BaseEntity",id:"using-baseentity",children:[]},{value:"Note about SQL drivers and @PrimaryKey",id:"note-about-sql-drivers-and-primarykey",children:[]}],c={rightToc:i},p="wrapper";function s(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(r.b)(p,a({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Entities are simple javascript objects (so called POJO), decorated with ",Object(r.b)("inlineCode",{parentName:"p"},"@Entity")," decorator.\nNo real restrictions are made, you do not have to extend any base class, you are more than welcome\nto ",Object(r.b)("a",a({parentName:"p"},{href:"/docs/v2/entity-constructors"}),"use entity constructors"),", just do not forget to specify primary key with\n",Object(r.b)("inlineCode",{parentName:"p"},"@PrimaryKey")," decorator."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"./entities/Book.ts"))),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"@Entity()\nexport class Book {\n\n  @PrimaryKey()\n  _id: ObjectID;\n\n  @Property()\n  createdAt = new Date();\n\n  @Property({ onUpdate: () => new Date() })\n  updatedAt = new Date();\n\n  @Property()\n  title: string;\n\n  @ManyToOne() // when you provide correct type hint, ORM will read it for you\n  author: Author;\n\n  @ManyToOne({ entity: () => Publisher }) // or you can specify the entity as class reference or string name\n  publisher: Publisher;\n\n  @ManyToMany({ entity: () => BookTag, inversedBy: 'books' })\n  tags = new Collection<BookTag>(this);\n\n  constructor(title: string, author: Author) {\n    this.title = title;\n    this.author = author;\n  }\n\n}\n\nexport interface Book extends IEntity<string> { }\n")),Object(r.b)("p",null,"You will need to extend Book's interface with ",Object(r.b)("inlineCode",{parentName:"p"},"IEntity"),". The interface represents internal\nmethods added to your entity's prototype via ",Object(r.b)("inlineCode",{parentName:"p"},"@Entity")," decorator."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"IEntity")," is generic interface, its type parameter depends on data type of normalized primary\nkey produced by used driver. SQL drivers usually use ",Object(r.b)("inlineCode",{parentName:"p"},"number")," and Mongo driver uses ",Object(r.b)("inlineCode",{parentName:"p"},"string"),".\nThis type default to union type ",Object(r.b)("inlineCode",{parentName:"p"},"number | string"),". Keep in mind that you have to worry about\nthis only when you define your primary key as ",Object(r.b)("inlineCode",{parentName:"p"},"_id")," instead of ",Object(r.b)("inlineCode",{parentName:"p"},"id"),".")),Object(r.b)("p",null,"As you can see, entity properties are decorated either with ",Object(r.b)("inlineCode",{parentName:"p"},"@Property")," decorator, or with one\nof reference decorators: ",Object(r.b)("inlineCode",{parentName:"p"},"@ManyToOne"),", ",Object(r.b)("inlineCode",{parentName:"p"},"@OneToMany"),", ",Object(r.b)("inlineCode",{parentName:"p"},"@OneToOne")," and ",Object(r.b)("inlineCode",{parentName:"p"},"@ManyToMany"),". "),Object(r.b)("p",null,"Here is another example of ",Object(r.b)("inlineCode",{parentName:"p"},"Author")," entity, that was referenced from the ",Object(r.b)("inlineCode",{parentName:"p"},"Book")," one:"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"./entities/Author.ts"))),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"@Entity()\nexport class Author {\n\n  @PrimaryKey()\n  _id: ObjectID;\n\n  @Property()\n  createdAt = new Date();\n\n  @Property({ onUpdate: () => new Date() })\n  updatedAt = new Date();\n\n  @Property()\n  name: string;\n\n  @Property()\n  email: string;\n\n  @Property()\n  age: number;\n\n  @Property()\n  termsAccepted = false;\n\n  @Property()\n  identities: string[];\n\n  @Property()\n  born: Date;\n\n  @OneToMany({ entity: () => Book, mappedBy: 'author' })\n  books = new Collection<Book>(this);\n\n  @ManyToOne()\n  favouriteBook: Book;\n\n  version: number;\n  versionAsString: string;\n\n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n\n}\n\nexport interface Author extends IEntity { }\n")),Object(r.b)("p",null,"More information about how collections work can be found on ",Object(r.b)("a",a({parentName:"p"},{href:"/docs/v2/collections"}),"collections page"),"."),Object(r.b)("p",null,"If you want to define your entity in Vanilla JavaScript, take a look ",Object(r.b)("a",a({parentName:"p"},{href:"/docs/v2/usage-with-js"}),"here"),"."),Object(r.b)("h2",{id:"entity-file-names"},"Entity file names"),Object(r.b)("p",null,"You are free to choose one of those formats for entity filename (for a ",Object(r.b)("inlineCode",{parentName:"p"},"BookTag")," entity):"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"BookTag.ts")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"BookTag.model.ts")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"book-tag.ts")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"book-tag.model.ts")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"book-tag.entity.ts"))),Object(r.b)("p",null,"Entity name is inferred from the first part of file name before first dot occurs, so you can\nadd any suffix behind the dot, not just ",Object(r.b)("inlineCode",{parentName:"p"},".model.ts")," or ",Object(r.b)("inlineCode",{parentName:"p"},".entity.ts"),". "),Object(r.b)("h2",{id:"using-baseentity"},"Using BaseEntity"),Object(r.b)("p",null,"You can define your own base entity with properties that you require on all entities, like\nprimary key and created/updated time. "),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"If you are initializing the ORM via ",Object(r.b)("inlineCode",{parentName:"p"},"entities")," option, you need to specify all your\nbase entities as well.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"./entities/BaseEntity.ts"))),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"export abstract class BaseEntity {\n\n  @PrimaryKey()\n  _id: ObjectID;\n\n  @Property()\n  createdAt = new Date();\n\n  @Property({ onUpdate: () => new Date() })\n  updatedAt = new Date();\n\n}\n")),Object(r.b)("h2",{id:"note-about-sql-drivers-and-primarykey"},"Note about SQL drivers and @PrimaryKey"),Object(r.b)("p",null,"All entities described above were defined with ",Object(r.b)("inlineCode",{parentName:"p"},"_id: ObjectID")," primary key - those were Mongo\nentities. "),Object(r.b)("p",null,"For SQL drivers, you will want to define your primary key as ",Object(r.b)("inlineCode",{parentName:"p"},"id: number")," instead:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"@PrimaryKey()\nid: number;\n")),Object(r.b)("p",null,"With your entities set up, you can start ",Object(r.b)("a",a({parentName:"p"},{href:"/docs/v2/entity-manager"}),"using entity manager")," and\n",Object(r.b)("a",a({parentName:"p"},{href:"/docs/v2/repositories"}),"repositories")," as described in following sections. "),Object(r.b)("p",null,Object(r.b)("a",a({parentName:"p"},{href:"/docs/v2/index#table-of-contents"}),"\u2190"," Back to table of contents")))}s.isMDXComponent=!0},288:function(e,n,t){"use strict";t.d(n,"a",(function(){return c})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r),o=a.a.createContext({}),i=function(e){var n=a.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},c=function(e){var n=i(e.components);return a.a.createElement(o.Provider,{value:n},e.children)};var p="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},l=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),l=i(t),b=r,d=l[c+"."+b]||l[b]||s[b]||o;return t?a.a.createElement(d,Object.assign({},{ref:n},p,{components:t})):a.a.createElement(d,Object.assign({},{ref:n},p))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=l;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var b=2;b<o;b++)i[b]=t[b];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}l.displayName="MDXCreateElement"}}]);